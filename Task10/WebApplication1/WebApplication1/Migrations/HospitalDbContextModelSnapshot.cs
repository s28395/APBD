// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Context;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(HospitalDbContext))]
    partial class HospitalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDoctor")
                        .HasName("Doctor_pk");

                    b.ToTable("Doctor", (string)null);

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "john.smith@gmail.com",
                            FirstName = "John",
                            LastName = "Smith"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "emily.johnson@gmail.com",
                            FirstName = "Emily",
                            LastName = "Johnson"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "michael.williams@gmail.com",
                            FirstName = "Michael",
                            LastName = "Williams"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "sarah.jones@gmail.com",
                            FirstName = "Sarah",
                            LastName = "Jones"
                        },
                        new
                        {
                            IdDoctor = 5,
                            Email = "james.brown@gmail.com",
                            FirstName = "James",
                            LastName = "Brown"
                        },
                        new
                        {
                            IdDoctor = 6,
                            Email = "jennifer.davis@gmail.com",
                            FirstName = "Jennifer",
                            LastName = "Davis"
                        },
                        new
                        {
                            IdDoctor = 7,
                            Email = "david.miller@gmail.com",
                            FirstName = "David",
                            LastName = "Miller"
                        },
                        new
                        {
                            IdDoctor = 8,
                            Email = "jessica.wilson@gmail.com",
                            FirstName = "Jessica",
                            LastName = "Wilson"
                        },
                        new
                        {
                            IdDoctor = 9,
                            Email = "matthew.moore@gmail.com",
                            FirstName = "Matthew",
                            LastName = "Moore"
                        },
                        new
                        {
                            IdDoctor = 10,
                            Email = "ashley.taylor@gmail.com",
                            FirstName = "Ashley",
                            LastName = "Taylor"
                        },
                        new
                        {
                            IdDoctor = 11,
                            Email = "christopher.anderson@gmail.com",
                            FirstName = "Christopher",
                            LastName = "Anderson"
                        },
                        new
                        {
                            IdDoctor = 12,
                            Email = "amanda.thomas@gmail.com",
                            FirstName = "Amanda",
                            LastName = "Thomas"
                        },
                        new
                        {
                            IdDoctor = 13,
                            Email = "daniel.jackson@gmail.com",
                            FirstName = "Daniel",
                            LastName = "Jackson"
                        },
                        new
                        {
                            IdDoctor = 14,
                            Email = "brittany.white@gmail.com",
                            FirstName = "Brittany",
                            LastName = "White"
                        },
                        new
                        {
                            IdDoctor = 15,
                            Email = "kevin.harris@gmail.com",
                            FirstName = "Kevin",
                            LastName = "Harris"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdMedicament")
                        .HasName("Medicament_pk");

                    b.ToTable("Medicament", (string)null);

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Pain reliever",
                            Name = "Aspirin",
                            Type = "Analgesic"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "Antibiotic",
                            Name = "Amoxicillin",
                            Type = "Antibiotic"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "Pain reliever",
                            Name = "Ibuprofen",
                            Type = "Analgesic"
                        },
                        new
                        {
                            IdMedicament = 4,
                            Description = "Pain reliever",
                            Name = "Acetaminophen",
                            Type = "Analgesic"
                        },
                        new
                        {
                            IdMedicament = 5,
                            Description = "Blood pressure medication",
                            Name = "Lisinopril",
                            Type = "Antihypertensive"
                        },
                        new
                        {
                            IdMedicament = 6,
                            Description = "Cholesterol-lowering medication",
                            Name = "Atorvastatin",
                            Type = "Statins"
                        },
                        new
                        {
                            IdMedicament = 7,
                            Description = "Diabetes medication",
                            Name = "Metformin",
                            Type = "Antidiabetic"
                        },
                        new
                        {
                            IdMedicament = 8,
                            Description = "Acid reducer",
                            Name = "Omeprazole",
                            Type = "Proton pump inhibitor"
                        },
                        new
                        {
                            IdMedicament = 9,
                            Description = "Anti-inflammatory",
                            Name = "Prednisone",
                            Type = "Corticosteroid"
                        },
                        new
                        {
                            IdMedicament = 10,
                            Description = "Thyroid hormone replacement",
                            Name = "Levothyroxine",
                            Type = "Thyroid hormone"
                        },
                        new
                        {
                            IdMedicament = 11,
                            Description = "Cholesterol-lowering medication",
                            Name = "Simvastatin",
                            Type = "Statins"
                        },
                        new
                        {
                            IdMedicament = 12,
                            Description = "Bronchodilator",
                            Name = "Albuterol",
                            Type = "Bronchodilator"
                        },
                        new
                        {
                            IdMedicament = 13,
                            Description = "Antidepressant",
                            Name = "Citalopram",
                            Type = "Antidepressant"
                        },
                        new
                        {
                            IdMedicament = 14,
                            Description = "Blood thinner",
                            Name = "Warfarin",
                            Type = "Anticoagulant"
                        },
                        new
                        {
                            IdMedicament = 15,
                            Description = "Diuretic",
                            Name = "Furosemide",
                            Type = "Diuretic"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.Property<DateTime>("Birthdate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdPatient")
                        .HasName("Patient_pk");

                    b.ToTable("Patient", (string)null);

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Birthdate = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Emma",
                            LastName = "Johnson"
                        },
                        new
                        {
                            IdPatient = 2,
                            Birthdate = new DateTime(1985, 10, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Noah",
                            LastName = "Williams"
                        },
                        new
                        {
                            IdPatient = 3,
                            Birthdate = new DateTime(1982, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Olivia",
                            LastName = "Jones"
                        },
                        new
                        {
                            IdPatient = 4,
                            Birthdate = new DateTime(1995, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Liam",
                            LastName = "Brown"
                        },
                        new
                        {
                            IdPatient = 5,
                            Birthdate = new DateTime(1988, 12, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ava",
                            LastName = "Davis"
                        },
                        new
                        {
                            IdPatient = 6,
                            Birthdate = new DateTime(1976, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "William",
                            LastName = "Miller"
                        },
                        new
                        {
                            IdPatient = 7,
                            Birthdate = new DateTime(1992, 2, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isabella",
                            LastName = "Wilson"
                        },
                        new
                        {
                            IdPatient = 8,
                            Birthdate = new DateTime(1980, 11, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Mason",
                            LastName = "Moore"
                        },
                        new
                        {
                            IdPatient = 9,
                            Birthdate = new DateTime(1987, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Sophia",
                            LastName = "Taylor"
                        },
                        new
                        {
                            IdPatient = 10,
                            Birthdate = new DateTime(1974, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Ethan",
                            LastName = "Anderson"
                        },
                        new
                        {
                            IdPatient = 11,
                            Birthdate = new DateTime(1998, 8, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Amelia",
                            LastName = "Thomas"
                        },
                        new
                        {
                            IdPatient = 12,
                            Birthdate = new DateTime(1983, 1, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Alexander",
                            LastName = "Jackson"
                        },
                        new
                        {
                            IdPatient = 13,
                            Birthdate = new DateTime(1991, 10, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Charlotte",
                            LastName = "White"
                        },
                        new
                        {
                            IdPatient = 14,
                            Birthdate = new DateTime(1979, 7, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Daniel",
                            LastName = "Harris"
                        },
                        new
                        {
                            IdPatient = 15,
                            Birthdate = new DateTime(1989, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Madison",
                            LastName = "Clark"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("DueDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription")
                        .HasName("Prescription_pk");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescription", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.PrescriptionMedicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription")
                        .HasName("PrescriptionMedicament_pk");

                    b.HasIndex("IdPrescription");

                    b.ToTable("PrescriptionMedicament", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Prescription", b =>
                {
                    b.HasOne("WebApplication1.Models.Doctor", "Doctor")
                        .WithMany("Prescrioptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Prescription_Doctor");

                    b.HasOne("WebApplication1.Models.Patient", "Patient")
                        .WithMany("Prescrioptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("Prescription_Patient");

                    b.Navigation("Doctor");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("WebApplication1.Models.PrescriptionMedicament", b =>
                {
                    b.HasOne("WebApplication1.Models.Medicament", "Medicament")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdMedicament")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("PrescriptionMedicament_Medicament");

                    b.HasOne("WebApplication1.Models.Prescription", "Prescription")
                        .WithMany("Medicaments")
                        .HasForeignKey("IdPrescription")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("PrescriptionMedicament_Prescription");

                    b.Navigation("Medicament");

                    b.Navigation("Prescription");
                });

            modelBuilder.Entity("WebApplication1.Models.Doctor", b =>
                {
                    b.Navigation("Prescrioptions");
                });

            modelBuilder.Entity("WebApplication1.Models.Medicament", b =>
                {
                    b.Navigation("Prescriptions");
                });

            modelBuilder.Entity("WebApplication1.Models.Patient", b =>
                {
                    b.Navigation("Prescrioptions");
                });

            modelBuilder.Entity("WebApplication1.Models.Prescription", b =>
                {
                    b.Navigation("Medicaments");
                });
#pragma warning restore 612, 618
        }
    }
}
